pipeline {
    agent any
    environment{
        DOCKER_TAG = getDockerTag()
    }
    stages{
        stage('Build Docker Image'){
            steps{
               sh "docker build . -t mitanjali/9pmwebapp:${DOCKER_TAG}"
            }
        }
        stage('DockerHub push'){
            steps{
                withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerHubPwd')]) {
                    sh "docker login -u mitanjali -p ${dockerHubPwd}"
                    sh "docker push mitanjali/9pmwebapp:${DOCKER_TAG}"
                }
            }
        }
        stage('Deploy to DevServer'){
            steps{
                sshagent (credentials: ['ec2-user dev-server']) {
                    script{
                        sh returnStatus: true, script: 'ssh ec2-user@172.31.3.47 docker rm -f 9pmwebapp'
                        def runCmd = "docker run -d -p 8080:8080 --name=9pmwebapp mitanjali/9pmwebapp: ${DOCKER_TAG}"
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.3.47 ${runCmd}"
                    }
                }
            }
        }
    }
}

def getDockerTag(){
    def tag  = sh script: 'git rev-parse HEAD', returnStdout: true
    return tag
}
